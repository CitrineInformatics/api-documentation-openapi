openapi: 3.0.0
info:
  title: Citrination
  version: 1.0.0
  description: API for access to Citrination
  termsOfService: 'https://citrination.com/tos'
  contact:
    name: Citrine Informatics
    email: admin@citrine.io
    url: 'https://citrine.io'
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'https://citrination.com/api'
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
  schemas:
    DatasetReturningQuery:
      type: object
      description: A query that returns information about datasets.
      properties:
        query:
          type: array
          items:
            $ref: '#/components/schemas/DataQuery'
          nullable: true
          default: null
          description: Queries against datasets and/or records.
        fromIndex:
          type: number
          format: integer
          nullable: true
          default: null
          description: >-
            The index of the first record to return. This is used for pagination
            through results.
        size:
          type: number
          format: integer
          nullable: true
          default: null
          description: >-
            The number of records to return. This is used for pagination through
            results. The number of hits that are returned will never be greater
            than this number, but may be smaller if there are fewer records in
            the scope of the query or if the maximum number of records that the
            server will allow to be returned is exceeded (this is typically
            100).
        randomResults:
          type: boolean
          nullable: true
          default: null
          description: null
        randomSeed: null
        scoreRelevance: null
        returnMaxScore: null
        countPifs: null
    DataQuery:
      type: object
      description: A query against dataset metadata and/or PIFs
      properties:
        logic: null
        simple: null
        dataset: null
        system: null
        query: null
    DatasetQuery:
      type: object
      description: A query against a Dataset.
      properties:
        logic:
          $ref: '$ref: '
        simple:
          $ref: '$ref: '
        id:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: Queries against the ID of a dataset.
        isFeatured:
          type: array
          items:
            $ref: '#/components/schemas/BooleanFilter'
          nullable: true
          default: null
          description: Queries against the isFeatured field of a dataset.
        name:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: Queries against the name of a dataset.
        description:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: Queries against the description of a dataset.
        owner:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: Queries against the name of the owner of a dataset.
        email:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: Queries against the email address of the owner of a dataset.
        query:
          type: array
          items:
            $ref: '#/components/schemas/DatasetQuery'
          nullable: true
          default: null
          description: >-
            Nested dataset queries. Queries can nest as deeply as needed in
            order to create complex combinations of boolean logical operations.
    DatasetSearchResult: null
    DatasetSearchHit: null
    BooleanFilter:
      type: object
      description: A filter against the value of a boolean-typed field.
      properties:
        logic:
          $ref: '$ref: '
        exists:
          $ref: '$ref: '
        equal:
          type: boolean
          nullable: true
          default: null
          description: True to match true values. False to match false values.
        filter:
          type: array
          items:
            $ref: '#/components/schemas/BooleanFilter'
          nullable: true
          default: null
          description: >-
            Nested boolean filters. Filters can nest as deeply as needed in
            order to create complex combinations of boolean logical operations.
    Filter:
      type: object
      description: An equality or range filter against a single field.
      properties:
        logic:
          $ref: '$ref: '
        exists:
          $ref: '$ref: '
        equal:
          type: string
          nullable: true
          default: null
          description: >-
            The string the match. This is executed as a phrase query meaning
            that the exact phrase in this string must be present in a record to
            match.
        min:
          type: string
          nullable: true
          default: null
          description: >-
            If the input value is non-numeric, or the field being searched does
            not support numbers, then this is the lexographical minimum of
            values to match. If the input value is numeric and the field being
            searched supports numbers, then this is the minimum numeric value to
            match.
        max:
          type: string
          nullable: true
          default: null
          description: >-
            If the input value is non-numeric, or the field being searched does
            not support numbers, then this is the lexographical maximum of
            values to match. If the input value is numeric and the field being
            searched supports numbers, then this is the maximum numeric value to
            match.
        exact:
          type: boolean
          nullable: true
          default: null
          description: >-
            When the value in the in _equal_ field must match exactly the entire
            value in the field being searched. For example, with _equal_ set to
            "gap" and _exact_ set to false, the filter will match against a
            field that contains "band gap". However, with _equal_ set to "gap"
            and _exact_ set to false, the filter will not match "band gap"; it
            will only match against a field that contains only the word "gap".
        filter:
          type: array
          items:
            $ref: '#/components/schemas/Filter'
          nullable: true
          default: null
          description: >-
            Nested filters. Filters can nest as deeply as needed in order to
            create complex combinations of boolean logical operations.
    Dataset:
      type: object
      description: >-
        Information about a dataset on Citrination. Datasets are folders of
        files and/or records that have an associated description and owner.
      properties:
        id:
          type: string
          nullable: true
          default: null
          description: The unique ID of the dataset.
        name:
          type: string
          nullable: true
          default: null
          description: The owner-defined name of the dataset.
        description:
          type: string
          nullable: true
          default: null
          description: The owner-defined description of the dataset.
        owner:
          type: string
          nullable: true
          default: null
          description: The name of the owner of the dataset.
        email:
          type: string
          nullable: true
          default: null
          description: The email address of the owner of the dataset.
        isFeatured:
          type: boolean
          nullable: true
          default: null
          description: >-
            Whether the dataset is a featured one. A null value implies that the
            dataset is not featured.
    System:
      type: object
      description: A generic representation of a physical system.
      discriminator:
        propertyName: type
        mapping:
          system: System
          system.chemical: ChemicalSystem
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - system
            - system.chemical
          description: Internal system type for this object.
        uid:
          type: string
          nullable: true
          default: null
          description: >-
            An ID for this system that is unique within the dataset that
            contains it on Citrination.
        names:
          type: array
          items:
            type: string
          nullable: true
          default: null
          description: Common names of the system.
        ids:
          type: array
          items:
            $ref: '#/components/schemas/Id'
          nullable: true
          default: null
          description: Any identifiers (named labels) that apply to the system.
        classifications:
          type: array
          items:
            $ref: '#/components/schemas/Classification'
          nullable: true
          default: null
          description: >-
            Any classifications (unambiguous categories) that apply to the
            system.
        source:
          nullable: true
          default: null
          $ref: '#/components/schemas/Source'
        quantity:
          nullable: true
          default: null
          $ref: '#/components/schemas/Quantity'
        properties:
          type: array
          items:
            $ref: '#/components/schemas/Property'
          nullable: true
          default: null
          description: Observations made on the system.
        preparation:
          type: array
          items:
            $ref: '#/components/schemas/ProcessStep'
          nullable: true
          default: null
          description: An ordered list of steps used to produce the system.
        subSystems:
          type: array
          items:
            $ref: '#/components/schemas/System'
          nullable: true
          default: null
          description: Any sub-systems of this system.
        references:
          type: array
          items:
            $ref: '#/components/schemas/Reference'
          nullable: true
          default: null
          description: Published references for this sytem.
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Person'
          nullable: true
          default: null
          description: People to contact for information about the system.
        licenses:
          type: array
          items:
            $ref: '#/components/schemas/License'
          nullable: true
          default: null
          description: Licenses that apply to the data in this record.
        tags:
          $ref: '$ref: '
    ChemicalSystem:
      type: object
      description: A physical system that contains chemical information.
      allOf:
        - $ref: '#/components/schemas/System'
        - properties:
            chemicalFormula:
              type: string
              nullable: true
              default: null
              description: The chemical formula of the system.
            composition:
              type: array
              items:
                $ref: '#/components/schemas/Composition'
              nullable: true
              default: null
              description: The list of chemical elements in the system and their amounts.
    Classification:
      type: object
      description: null
      properties: null
    DisplayItem:
      type: object
      description: null
      properties: null
    FileReference:
      type: object
      description: null
      properties: null
    Id:
      type: object
      description: null
      properties: null
    Instrument:
      type: object
      description: null
      properties: null
    License:
      type: object
      description: null
      properties: null
    Method:
      type: object
      description: null
      properties: null
    Name:
      type: object
      description: null
      properties: null
    Pages:
      type: object
      description: null
      properties: null
    Person:
      type: object
      description: null
      properties: null
    ProcessStep:
      type: object
      description: null
      properties: null
    Property:
      type: object
      description: null
      properties: null
    Quantity:
      type: object
      description: null
      properties:
        actualMassPercent:
          type: null
          nullable: true
          default: null
          description: null
        actualVolumePercent:
          type: null
          nullable: true
          default: null
          description: null
        actualNumberPercent:
          type: null
          nullable: true
          default: null
          description: null
        idealMassPercent:
          type: null
          nullable: true
          default: null
          description: null
        idealVolumePercent:
          type: null
          nullable: true
          default: null
          description: null
        idealNumberPercent:
          type: null
          nullable: true
          default: null
          description: null
        tags:
          $ref: '$ref: '
    Reference:
      type: object
      description: null
      properties: null
    Scalar:
      type: object
      description: null
      properties: null
    Software:
      type: object
      description: null
      properties: null
    Source:
      type: object
      description: The source (producer) of a system.
      properties:
        producer:
          type: string
          nullable: true
          default: null
          description: The producing entity of the system.
        url:
          type: string
          nullable: true
          default: null
          description: The URL at which the producer can be accessed.
        tags:
          $ref: '$ref: '
    Value:
      type: object
      description: null
      properties: null
    Composition:
      type: object
      description: null
      properties: null
  x-hiddenSchemes:
    $ref: ./hiddenSchemes/index.yaml

