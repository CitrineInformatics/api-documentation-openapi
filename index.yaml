swagger: 2
info:
  title: Citrination
  version: 1.0.0
  description: API for access to Citrination
  termsOfService: 'https://citrination.com/tos'
  contact:
    name: Citrine Informatics
    email: admin@citrine.io
    url: 'https://citrine.io'
  license:
    name: Apache License Version 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'
schemes:
  - https
host: citrination.com
basePath: /api
consumes:
  - application/json
produces:
  - application/json
security:
  - ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
paths:
  /datasets/search:
    post:
      description: >-
        Search for datasets by the metadata for that dataset or the content of
        the files and PIFs that it contains.
      operationId: search-datasets
      tags:
        - search
      parameters:
        - name: query
          in: body
          description: A query for datasets and options for that query.
          required: true
          schema:
            type: object
            description: A query that returns information about datasets.
            allOf:
              - type: object
                description: Base type for all queries against Citrination.
                properties:
                  fromIndex:
                    type: number
                    format: integer
                    nullable: true
                    default: null
                    description: >-
                      The index of the first record to return. This is used for
                      pagination through results.
                  size:
                    type: number
                    format: integer
                    nullable: true
                    default: null
                    description: >-
                      The number of records to return. This is used for
                      pagination through results. The number of hits that are
                      returned will never be greater than this number, but may
                      be smaller if there are fewer records in the scope of the
                      query or if the maximum number of records that the server
                      will allow to be returned is exceeded (this is typically
                      100).
                  randomResults:
                    type: boolean
                    nullable: true
                    default: null
                    description: >-
                      Whether a random set of results should be returned. If not
                      specified, the default value is false.
                  randomSeed:
                    type: number
                    format: int32
                    nullable: true
                    default: null
                    description: >-
                      The seed to the pseudo-random number generator used to
                      generate random results. If not specified, a value based
                      on the current time will be used. This should be used when
                      paginating through results; if not specified, a different
                      random seed will be generated for each request and there
                      may be duplicate records between sets of results.
                  scoreRelevance:
                    type: boolean
                    nullable: true
                    default: null
                    description: >-
                      Whether to score relevance in queries. If not specified,
                      the relevancy score is not tracked.
                  returnMaxScore:
                    type: boolean
                    nullable: true
                    default: null
                    description: >-
                      Whether to return the maximum score over all hits in
                      scope, not just the results that are returned. This only
                      has meaning when scoreRelevance is set to true. If not
                      specified, the default value of this settings is false.
              - properties:
                  query:
                    type: array
                    items:
                      type: object
                      description: A query against dataset metadata and/or PIFs
                      properties:
                        logic:
                          type: string
                          enum:
                            - SHOULD
                            - MUST
                            - MUST_NOT
                            - OPTIONAL
                            - null
                          nullable: true
                          default: null
                          description: >
                            When multiple queries appear in a list, the logic
                            defines the way in which each will be interpreted.

                            - SHOULD is equivalent to boolean OR logic. - MUST
                            is eqivalent to boolean AND logic. - MUST_NOT is
                            equivalent to boolean NOT logic. - OPTIONAL does not
                            have an effect on whether a record matches; the
                            specific query element is ignored during the primary
                            search for records in scope. However, OPTIONAL
                            queries are executed on subsequent steps such as
                            extractions and data statistics gathering.

                            When multiple queries exist with SHOULD logic, a
                            minimum of 1 must match in order for the overall
                            query to match. When logic is set to a null value,
                            it is interpreted as SHOULD.
                        simple:
                          type: string
                          nullable: true
                          default: null
                          description: >
                            A string that is run against all fields in this
                            object and their children. Strings are tokenized on
                            whitespace unless surrounded by quotes. For example,
                            `GaN "band gap"` tokenizes to `GaN` and `band gap`
                            where each token must match its entire phrase in a
                            record. Tokens are executed with boolean OR logic.
                            Therefore, `GaN "band gap"` matches records that
                            contain `GaN` or `band gap`. Since simple filters
                            are, in this way, extremely inclusive operations, it
                            is typically recommended that relevancy scoring be
                            turned on for the query so that the records that
                            match the most values are ranked the highest.
                        dataset:
                          type: array
                          items:
                            type: object
                            description: A query against a Dataset.
                            properties:
                              logic:
                                type: string
                                enum:
                                  - SHOULD
                                  - MUST
                                  - MUST_NOT
                                  - OPTIONAL
                                  - null
                                nullable: true
                                default: null
                                description: >
                                  When multiple queries appear in a list, the
                                  logic defines the way in which each will be
                                  interpreted.

                                  - SHOULD is equivalent to boolean OR logic. -
                                  MUST is eqivalent to boolean AND logic. -
                                  MUST_NOT is equivalent to boolean NOT logic. -
                                  OPTIONAL does not have an effect on whether a
                                  record matches; the specific query element is
                                  ignored during the primary search for records
                                  in scope. However, OPTIONAL queries are
                                  executed on subsequent steps such as
                                  extractions and data statistics gathering.

                                  When multiple queries exist with SHOULD logic,
                                  a minimum of 1 must match in order for the
                                  overall query to match. When logic is set to a
                                  null value, it is interpreted as SHOULD.
                              simple:
                                type: string
                                nullable: true
                                default: null
                                description: >
                                  A string that is run against all fields in
                                  this object and their children. Strings are
                                  tokenized on whitespace unless surrounded by
                                  quotes. For example, `GaN "band gap"`
                                  tokenizes to `GaN` and `band gap` where each
                                  token must match its entire phrase in a
                                  record. Tokens are executed with boolean OR
                                  logic. Therefore, `GaN "band gap"` matches
                                  records that contain `GaN` or `band gap`.
                                  Since simple filters are, in this way,
                                  extremely inclusive operations, it is
                                  typically recommended that relevancy scoring
                                  be turned on for the query so that the records
                                  that match the most values are ranked the
                                  highest.
                              id:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    An equality or range filter against a single
                                    field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        The string the match. This is executed
                                        as a phrase query meaning that the exact
                                        phrase in this string must be present in
                                        a record to match.
                                    min:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical minimum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the minimum
                                        numeric value to match.
                                    max:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical maximum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the maximum
                                        numeric value to match.
                                    exact:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When the value in the in _equal_ field
                                        must match exactly the entire value in
                                        the field being searched. For example,
                                        with _equal_ set to "gap" and _exact_
                                        set to false, the filter will match
                                        against a field that contains "band
                                        gap". However, with _equal_ set to "gap"
                                        and _exact_ set to false, the filter
                                        will not match "band gap"; it will only
                                        match against a field that contains only
                                        the word "gap".
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          Filter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested filters. Filters can nest as
                                        deeply as needed in order to create
                                        complex combinations of boolean logic.
                                nullable: true
                                default: null
                                description: Queries against the ID of a dataset.
                              isFeatured:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    A filter against the value of a
                                    boolean-typed field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        True to match true values. False to
                                        match false values.
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          BooleanFilter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested boolean filters. Filters can nest
                                        as deeply as needed in order to create
                                        complex combinations of boolean logic.
                                  example:
                                    simple:
                                      value:
                                        equal: true
                                      summary: >-
                                        A simple test that a value is equal to
                                        true.
                                    exists:
                                      value:
                                        exists: false
                                      summary: Test that the field does not exist.
                                    notTrue:
                                      value:
                                        logic: MUST_NOT
                                        equal: true
                                      summary: >-
                                        Test that the field is not equal to
                                        true. This will be satisfied when the
                                        field does not exist or when it does
                                        exist but is equal to false.
                                    nested:
                                      value:
                                        filter:
                                          - equal: false
                                          - exists: false
                                      summary: >-
                                        Match when it is true that the field has
                                        a value of false or when the field does
                                        not exist (the default logic is SHOULD
                                        between the two query objects).
                                nullable: true
                                default: null
                                description: >-
                                  Queries against the isFeatured field of a
                                  dataset.
                              name:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    An equality or range filter against a single
                                    field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        The string the match. This is executed
                                        as a phrase query meaning that the exact
                                        phrase in this string must be present in
                                        a record to match.
                                    min:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical minimum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the minimum
                                        numeric value to match.
                                    max:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical maximum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the maximum
                                        numeric value to match.
                                    exact:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When the value in the in _equal_ field
                                        must match exactly the entire value in
                                        the field being searched. For example,
                                        with _equal_ set to "gap" and _exact_
                                        set to false, the filter will match
                                        against a field that contains "band
                                        gap". However, with _equal_ set to "gap"
                                        and _exact_ set to false, the filter
                                        will not match "band gap"; it will only
                                        match against a field that contains only
                                        the word "gap".
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          Filter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested filters. Filters can nest as
                                        deeply as needed in order to create
                                        complex combinations of boolean logic.
                                nullable: true
                                default: null
                                description: Queries against the name of a dataset.
                              description:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    An equality or range filter against a single
                                    field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        The string the match. This is executed
                                        as a phrase query meaning that the exact
                                        phrase in this string must be present in
                                        a record to match.
                                    min:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical minimum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the minimum
                                        numeric value to match.
                                    max:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical maximum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the maximum
                                        numeric value to match.
                                    exact:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When the value in the in _equal_ field
                                        must match exactly the entire value in
                                        the field being searched. For example,
                                        with _equal_ set to "gap" and _exact_
                                        set to false, the filter will match
                                        against a field that contains "band
                                        gap". However, with _equal_ set to "gap"
                                        and _exact_ set to false, the filter
                                        will not match "band gap"; it will only
                                        match against a field that contains only
                                        the word "gap".
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          Filter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested filters. Filters can nest as
                                        deeply as needed in order to create
                                        complex combinations of boolean logic.
                                nullable: true
                                default: null
                                description: Queries against the description of a dataset.
                              owner:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    An equality or range filter against a single
                                    field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        The string the match. This is executed
                                        as a phrase query meaning that the exact
                                        phrase in this string must be present in
                                        a record to match.
                                    min:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical minimum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the minimum
                                        numeric value to match.
                                    max:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical maximum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the maximum
                                        numeric value to match.
                                    exact:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When the value in the in _equal_ field
                                        must match exactly the entire value in
                                        the field being searched. For example,
                                        with _equal_ set to "gap" and _exact_
                                        set to false, the filter will match
                                        against a field that contains "band
                                        gap". However, with _equal_ set to "gap"
                                        and _exact_ set to false, the filter
                                        will not match "band gap"; it will only
                                        match against a field that contains only
                                        the word "gap".
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          Filter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested filters. Filters can nest as
                                        deeply as needed in order to create
                                        complex combinations of boolean logic.
                                nullable: true
                                default: null
                                description: >-
                                  Queries against the name of the owner of a
                                  dataset.
                              email:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    An equality or range filter against a single
                                    field.
                                  properties:
                                    logic:
                                      type: string
                                      enum:
                                        - SHOULD
                                        - MUST
                                        - MUST_NOT
                                        - OPTIONAL
                                        - null
                                      nullable: true
                                      default: null
                                      description: >
                                        When multiple queries appear in a list,
                                        the logic defines the way in which each
                                        will be interpreted.

                                        - SHOULD is equivalent to boolean OR
                                        logic. - MUST is eqivalent to boolean
                                        AND logic. - MUST_NOT is equivalent to
                                        boolean NOT logic. - OPTIONAL does not
                                        have an effect on whether a record
                                        matches; the specific query element is
                                        ignored during the primary search for
                                        records in scope. However, OPTIONAL
                                        queries are executed on subsequent steps
                                        such as extractions and data statistics
                                        gathering.

                                        When multiple queries exist with SHOULD
                                        logic, a minimum of 1 must match in
                                        order for the overall query to match.
                                        When logic is set to a null value, it is
                                        interpreted as SHOULD.
                                    exists:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When set to true, the field must exist
                                        and have a non-null value. When set to
                                        false, the field must not exist or, if
                                        it does exist, must have a null value.
                                    equal:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        The string the match. This is executed
                                        as a phrase query meaning that the exact
                                        phrase in this string must be present in
                                        a record to match.
                                    min:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical minimum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the minimum
                                        numeric value to match.
                                    max:
                                      type: string
                                      nullable: true
                                      default: null
                                      description: >-
                                        If the input value is non-numeric, or
                                        the field being searched does not
                                        support numbers, then this is the
                                        lexographical maximum of values to
                                        match. If the input value is numeric and
                                        the field being searched supports
                                        numbers, then this is the maximum
                                        numeric value to match.
                                    exact:
                                      type: boolean
                                      nullable: true
                                      default: null
                                      description: >-
                                        When the value in the in _equal_ field
                                        must match exactly the entire value in
                                        the field being searched. For example,
                                        with _equal_ set to "gap" and _exact_
                                        set to false, the filter will match
                                        against a field that contains "band
                                        gap". However, with _equal_ set to "gap"
                                        and _exact_ set to false, the filter
                                        will not match "band gap"; it will only
                                        match against a field that contains only
                                        the word "gap".
                                    filter:
                                      type: array
                                      items:
                                        type: object
                                        description: >-
                                          Filter type. This is a recursive
                                          definition.
                                      nullable: true
                                      default: null
                                      description: >-
                                        Nested filters. Filters can nest as
                                        deeply as needed in order to create
                                        complex combinations of boolean logic.
                                nullable: true
                                default: null
                                description: >-
                                  Queries against the email address of the owner
                                  of a dataset.
                              query:
                                type: array
                                items:
                                  type: object
                                  description: >-
                                    DatasetQuery type. This is a recursive
                                    definition.
                                nullable: true
                                default: null
                                description: >-
                                  Nested dataset queries. Queries can nest as
                                  deeply as needed in order to create complex
                                  combinations of boolean logic.
                          nullable: true
                          default: null
                          description: >-
                            A list of queries to run against the content of
                            datasets.
                        system:
                          type: array
                          items:
                            type: object
                            description: A query aginst the content of a PIF system.
                            properties:
                              logic:
                                type: string
                                enum:
                                  - SHOULD
                                  - MUST
                                  - MUST_NOT
                                  - OPTIONAL
                                  - null
                                nullable: true
                                default: null
                                description: >
                                  When multiple queries appear in a list, the
                                  logic defines the way in which each will be
                                  interpreted.

                                  - SHOULD is equivalent to boolean OR logic. -
                                  MUST is eqivalent to boolean AND logic. -
                                  MUST_NOT is equivalent to boolean NOT logic. -
                                  OPTIONAL does not have an effect on whether a
                                  record matches; the specific query element is
                                  ignored during the primary search for records
                                  in scope. However, OPTIONAL queries are
                                  executed on subsequent steps such as
                                  extractions and data statistics gathering.

                                  When multiple queries exist with SHOULD logic,
                                  a minimum of 1 must match in order for the
                                  overall query to match. When logic is set to a
                                  null value, it is interpreted as SHOULD.
                          nullable: true
                          default: null
                          description: >-
                            A list of queries to run against the content of
                            PIFs.
                        query:
                          type: array
                          items:
                            type: object
                            description: DataQuery type. This is a recursive definition.
                          nullable: true
                          default: null
                          description: >-
                            Nested data queries. Queries can nest as deeply as
                            needed in order to create complex combinations of
                            boolean logic.
                    nullable: true
                    default: null
                    description: >-
                      Queries against the content of datasets and/or PIF
                      records.
                  countPifs:
                    type: boolean
                    nullable: true
                    default: null
                    description: >-
                      Whether to count the number of PIFs in scope of the
                      current query within each dataset. If there are no queries
                      against the content of the PIFs, then this will return the
                      total number of PIFs in the dataset. If there are queries
                      against PIF content, then this will return the number of
                      PIFs in each dataset that matched that query.
      responses:
        '200':
          description: A search result with datasets that matched the input query.
          schema:
            type: object
            properties:
              results:
                type: object
                description: The result of a single query for datasets on Citrination.
                allOf:
                  - type: object
                    description: The base type for all search results against Citrination.
                    properties:
                      took:
                        type: number
                        format: int64
                        nullable: true
                        default: null
                        description: >-
                          The number of milliseconds that the query took to
                          execute on the Citrination server. This does _not_
                          include the latency in the request being sent to
                          Citrination or returned to the local machine.
                      totalNumHits:
                        type: number
                        format: int64
                        nullable: true
                        default: null
                        description: >-
                          The total number of hits against the query that was
                          executed. The number of hits returned from the server
                          may be significantly less than this due to the
                          pagination of results.
                      maxScore:
                        type: number
                        format: double
                        nullable: true
                        default: null
                        description: >-
                          The maximum score for all hits against the query that
                          was executed (not simple the max score of the hits in
                          the current paginated set of results).
                  - properties:
                      hits:
                        type: array
                        items:
                          type: object
                          description: >-
                            A single dataset that matched a query run against
                            Citrination.
                          properties:
                            score:
                              type: number
                              format: double
                              nullable: true
                              default: null
                              description: >-
                                The relevancy score for the dataset against the
                                executed query.
                            id:
                              type: string
                              nullable: true
                              default: null
                              description: The unique ID of the dataset.
                            name:
                              type: string
                              nullable: true
                              default: null
                              description: The owner-defined name of the dataset.
                            description:
                              type: string
                              nullable: true
                              default: null
                              description: The owner-defined description of the dataset.
                            owner:
                              type: string
                              nullable: true
                              default: null
                              description: The name of the owner of the dataset.
                            email:
                              type: string
                              nullable: true
                              default: null
                              description: The email address of the owner of the dataset.
                            isFeatured:
                              type: boolean
                              nullable: true
                              default: null
                              description: >-
                                Whether the dataset is a featured one. A null
                                value implies that the dataset is not featured.
                            numPifs:
                              type: number
                              format: int64
                              nullable: true
                              default: null
                              description: >-
                                When requested in the query, this is the number
                                of PIFs that are in the dataset and match any
                                filters on the content of PIF systems.
                            updatedAt:
                              type: string
                              nullable: true
                              default: null
                              description: >-
                                The date and time that the dataset record was
                                last updated.
                        nullable: true
                        default: null
                        description: >-
                          The current set of paginated hits against the query
                          that was executed.

